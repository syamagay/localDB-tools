#!/bin/bash
#################################
# Author: Arisa Kubota
# Email: arisa.kubota at cern.ch
# Date: July 2019
# Project: Local Database for YARR
# Description: Bash completion for upload tool
#################################
# This makes heavy use of ksh style extended globs and contains Linux specific
# code for completing the parameter to the -fstype option.

_localdbtool_upload() {
    local cur prev cword
    _get_comp_words_by_ref -n : cur prev cword

    if [ -f ${HOME}/.yarr/run.dat ]; then
        local runs=`cat ${HOME}/.yarr/run.dat|xargs`
    else
        local runs=""
    fi
    if [ -f ${HOME}/.yarr/dcs.dat ]; then
        local dcs=`cat ${HOME}/.yarr/dcs.dat|xargs`
    else
        local dcs=""
    fi

    if [ "${cword}" -eq 1 ]; then
        COMPREPLY=( $(compgen -W "--scan --dcs --cache --comp" -- "${cur}") )
    elif [ "${cword}" -eq 2 ]; then
        if [ "${prev}" = "--scan" ]; then
            compopt -o filenames
            COMPREPLY=( $(compgen -d -- $cur) )
        elif [ "${prev}" = "--dcs" ]; then
            COMPREPLY=( $(compgen -W "${dcs}" -- "${cur}") )
        elif [ "${prev}" = "--cache" ]; then
            COMPREPLY=( $(compgen -W "--username --password --config" -- "${cur}") )
        elif [ "${prev}" = "--comp" ]; then
            COMPREPLY=( $(compgen -W "$(ls --color=never .)" -- "${cur}") )
        fi
    elif [ "${cword}" -eq 3 ]; then
        if [ "`echo ${runs} | grep ${prev}`" ]; then 
            COMPREPLY=( $(compgen -W "--username --password --config" -- "${cur}") )
        elif [ "`echo ${dcs} | grep ${prev}`" ]; then 
            COMPREPLY=( $(compgen -W "--username --password --config" -- "${cur}") )
        elif [ "`ls --color=never . | grep ${prev}`" ]; then
            COMPREPLY=( $(compgen -W "$(ls --color=never ./${prev})" -- "${cur}") )
        fi
    fi
}
complete -F _localdbtool_upload localdbtool-upload
